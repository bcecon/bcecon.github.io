---
title: Lecture 5
subtitle: Website Basics; Python Basics
format:
  clean-revealjs:
    self-contained: true
    incremental: true   
    css: clean-revealjs.css
    # logo: logo-title-slide.png
author:
  - name: Byeong-Hak Choe
    email: bchoe@geneseo.edu
    affiliations: SUNY Geneseo
date: 2024-02-06
execute: 
  eval: false
  echo: true
callout-icon: false

from: markdown+emoji

# bibliography: refs.bib
# include-after-body: backwards.html
---


```{r setup}
#| include: false
#| eval: true

library(knitr)
library(tidyverse)
# set default options
opts_chunk$set(echo = FALSE,
               fig.width = 7.252,
               fig.height = 4,
               comment = "#",
               dpi = 300)

knitr::knit_engines$set("markdown")
```




## Workflow
### Shortcuts for Quarto Document


:::: {.columns}
::: {.column width="50%"}
**Mac**

- **command + shift + K** renders a Quarto document.
- **option + command + I** create a code block.
- **command + return** runs a current line of code.
- **command + shift + C** is the shortcut for # (commenting).

:::

::: {.column width="50%"}

**Windows**

- **Ctrl + Shift + K** renders a Quarto document.
- **Alt + Ctrl + I** create a code block.
- **Ctrl + Enter** runs a current line of code.
- **Ctrl + Shift + C** is the shortcut for # (commenting).

:::
::::




# Today's Learning Objectives {background-color="#1c4982"}

## Learning Objectives

:::: {.columns}
::: {.column width="50%"}


- Update Website
- Practice Quarto and Jupyter Notebook

:::

::: {.column width="50%"}
:::{}

- Python Basics

:::


:::
::::



# Getting Started with Quarto {background-color="#1c4982"}



## Quarto Websites
### Rendering
:::{}

```{.bash}
quarto render
```

- `quarto render` from Terminal renders *all* Quarto/Jupyter Notebook files in your local working directory:

- We should use `quarto render` when we have changes in `_quarto.yml`.

- The **Render** button (**command/Ctrl + shift + K**) renders (1) a single Quarto/Jupyter Notebook file or (2) Quarto files that have changes but have not rendered yet.


:::


## Quarto Websites
### Updating a Website


- Make changes only from your local laptop. 

  - Do not make any change from the GitHub repo webpage.
  
  
  
## Quarto Websites
### `*.ipynb` in Quarto Webpages and Blog posts

:::{}

- `quarto render` renders `.ipynb` notebooks, so that corresponding `html` files are rendered. 

- If a `.ipynb` notebook is in `posts` to be used for a blog post, Quarto executes code cells in the `.ipynb` notebook. 

- If a `.ipynb` notebook is NOT in `posts`, Quarto does NOT execute code cells in the `.ipynb` notebook. 

- If you need to update cell outputs in `*.ipynb` that is used for a non-blog webpage, 
  - Run that `*.ipynb` on Google Colab, save it, and then download it.
  - Render that `*.ipynb` as a blog post, and then move that `*.ipynb` to outside of `posts` directory. 

:::



## Quarto Websites
### Appearance and Style

- `theme` specifies the Bootstrap theme to use for the page (themes are drawn from the [Bootswatch](https://bootswatch.com) theme library).
  - Valid themes include `default`, `bootstrap`, `cerulean`, `cosmo`, `darkly`, `flatly`, `journal`, `lumen`, `paper`, `readable`, `sandstone`, `simplex`, `spacelab`, `united`, and `yeti`. 

  
- `highlight-style` specifies the code highlighting style. 
  - Supported styles include `default`, `tango`, `pygments`, `kate`, `monochrome`, `espresso`, `zenburn`, `haddock`, `breezedark`, and `textmate`. 


- More details about HTML theming and code blocks are available here:
  - [HTML Theming](https://quarto.org/docs/output-formats/html-themes.html)
  - [HTML Code Blocks](https://quarto.org/docs/output-formats/html-code.html)



## Quarto Websites
### About

- Your `index.qmd` sets a page about you.
  - Details in about pages are available here:
  - [https://quarto.org/docs/websites/website-about.html](https://quarto.org/docs/websites/website-about.html).


- Quarto includes 5 built in templates:
  - `jolla`
  - `trestles`
  - `solana`
  - `marquee`
  - `broadside`



## Quarto Websites
### Icons and Emojis

- A ton of Bootstrap icons are available here:
  - [https://icons.getbootstrap.com](https://icons.getbootstrap.com).


- A ton of markdown emojis are available here `r emo::ji('smile')`:
  - [https://github.com/ikatyang/emoji-cheat-sheet](https://github.com/ikatyang/emoji-cheat-sheet)
  - [https://gist.github.com/rxaviers/7360908](https://gist.github.com/rxaviers/7360908)




## Quarto Websites
### Naviation and Adding Pages

- We can add a new page to the website through `navbar` in `_quarto.yml`

```{.bash}
left:
- text: Project
  href: project.qmd
- text: Blog
  href: blog-listing.qmd
- text: Homeowrk
  href: hw.qmd
```




## Quarto Websites
### Naviation and Adding Pages

- We can also create a dropdown menu in a navigation bar by including a `menu`

```{.bash}
left:
  - text: "Projects"
    menu:
      - project_1.qmd
      - project_2.qmd 
```


- More details about navbar are available here:
  - [https://quarto.org/docs/websites/website-navigation.html](https://quarto.org/docs/websites/website-navigation.html)




## Quarto Websites  {background-color="#6497b1"}
### Colors


- A ton of hex codes for colors are available here:
  - [https://www.color-hex.com](https://www.color-hex.com)




## Website Basics

- Let's do [Classwork 3](https://bcdanl.github.io/210/danl-cw/danl-210-cw-03.html).




<script>
document.addEventListener('wheel', function(event) {
    if (event.deltaY > 0) {
        Reveal.next(); // Scroll down to go to the next slide
    } else {
        Reveal.prev(); // Scroll up to go to the previous slide
    }
}, false);

window.onload = function() {
    document.querySelectorAll('a').forEach(function(link) {
        link.setAttribute('target', '_blank');
    });
};

document.addEventListener('DOMContentLoaded', function() {
  // Query all anchor tags within code blocks (adjust the selector as needed)
  document.querySelectorAll('pre code a').forEach(function(element) {
    element.addEventListener('click', function(e) {
      e.preventDefault(); // Prevent the default anchor action
      e.stopPropagation(); // Stop the event from bubbling up
    });
  });
});


document.addEventListener('DOMContentLoaded', function() {
    // Target all span elements within code blocks that have IDs starting with 'cb'
    document.querySelectorAll('pre code span[id^="cb"]').forEach(function(element) {
        element.addEventListener('mouseenter', function() {
            // Apply yellow background color to the hovered span element
            this.style.backgroundColor = '#FFFF99';
        });
        element.addEventListener('mouseleave', function() {
            // Revert the background color when the mouse leaves the span element
            this.style.backgroundColor = '';
        });
    });
});
</script>